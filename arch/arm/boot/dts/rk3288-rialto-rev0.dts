/*
 * Google Veyron Rialto Rev0-2 board device tree source
 *
 * Copyright 2015 Google, Inc
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;

/ {
	/*
	 * This block is a hack in order to avoid deferral for power supplies.
	 * See chrome-os-partner:37022
	 */

	vccsys {
	};
};

#include "rk3288-veyron.dtsi"

/ {
	model = "Google Rialto";
	compatible = "google,veyron-rialto-rev2", "google,veyron-rialto-rev1",
		     "google,veyron-rialto-rev0",
		     "google,veyron-rialto", "google,veyron", "rockchip,rk3288";

	gpio-keys {
		pinctrl-0 = <&bt_host_wake &pwr_key_l &push_key>;

		pushbutton {
			label = "PushButton";
			gpios = <&gpio7 9 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_F1>;
			debounce-interval = <100>;
			gpio-key,wakeup;
		};
	};

	gpio-leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&led_ready &led_ready2 &led_syncing &led_error>;

		ready {
			gpios = <&gpio7 0 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		ready2 {
			gpios = <&gpio7 13 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		syncing {
			gpios = <&gpio7 11 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		error {
			gpios = <&gpio7 15 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
	};

	/* A non-regulated voltage from power supply or battery */
	vccsys: vccsys {
		compatible = "regulator-fixed";
		regulator-name = "vccsys";
		regulator-boot-on;
		regulator-always-on;
	};

	vcc33_sys: vcc33-sys {
		vin-supply = <&vccsys>;
	};

	vcc_5v: vcc-5v {
		vin-supply = <&vccsys>;
	};

	vcc33_io: vcc33-io {
		compatible = "regulator-fixed";
		regulator-name = "vcc33_io";
		regulator-always-on;
		regulator-boot-on;
		vin-supply = <&vcc33_sys>;
	};

	/delete-node/ vcc50-hdmi;

	/* This turns on vbus for usb2 */
	vcc5_host2: vcc5-host2-regulator {
		compatible = "regulator-fixed";
		enable-active-high;
		gpio = <&gpio0 12 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&usb2_pwr_en>;
		regulator-name = "vcc5_host2";
		regulator-always-on;
		regulator-boot-on;
	};

	io-domains {
		/delete-property/ lcdc-supply;
	};
};

&cpu0 {
	/* Don't go above 1.4GHz */
	operating-points = <
		/* KHz    uV */
		1416000 1200000
		1200000 1100000
		1008000 1050000
		 816000 1000000
		 696000  950000
		 600000  900000
		 408000  900000
		 216000  900000
		 126000  900000
	>;
};

&dmc {
	status = "disabled";
};

&emmc {
	clock-freq-min-max = <400000 100000000>;
};

&rk808 {
	/delete-property/ vcc6-supply;
	vcc10-supply = <&vcc33_sys>;

	regulators {
		/* vcc33_io is sourced directly from vcc33_sys */
		/delete-node/ LDO_REG1;

		/* no vcc33_lcd */
		/delete-node/ SWITCH_REG1;

		vcc18_codec: LDO_REG6 { /* goes to nrf51 only, no codec exists */
			regulator-always-on;
			regulator-boot-on;
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-name = "vcc18_codec";
			regulator-suspend-mem-disabled;
		};

		vcc18_lcd: SWITCH_REG2 {
			regulator-always-on;
			regulator-boot-on;
			regulator-name = "vcc18_lcd";
			regulator-suspend-mem-disabled;
		};
	};
};

&i2c2 {
	status = "disabled";
};

&i2c3 {
	/* Environmental Sensor, Bosch BME280  */
	status = "okay";
};

&i2c4 {
	status = "disabled";
};

&pwm0 {
	status = "okay";
};

&pwm1 {
	status = "okay";
};

&uart1 {
	/* Connected to the NRF51 */
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_xfer &uart1_cts &uart1_rts>;
};

&hdmi {
	hpd-ignore;
};

&hdmi_audio {
	status = "disabled";
};

&pinctrl {
	pinctrl-0 = <
		/* Common for sleep and wake, but no owners */
		&ddr0_retention
		&ddrio_pwroff
		&modem_on_off
		&modem_shutdown
		&global_pwroff
	>;
	pinctrl-1 = <
		/* Common for sleep and wake, but no owners */
		&ddr0_retention
		&ddrio_pwroff
		&modem_on_off
		&modem_shutdown
		&global_pwroff
	>;

	/* These pins are not present on rialto, even though they should. */
	/delete-node/ bt_dev_wake_sleep;
	/delete-node/ bt_dev_wake_awake;

	buttons {
		push_key: push_key {
			rockchip,pins = <7 9 RK_FUNC_GPIO &pcfg_pull_up>;
		};
	};

	leds {
		led_ready: led_ready {
			rockchip,pins = <7 0 RK_FUNC_GPIO &pcfg_output_low>;
		};

		led_ready2: led_ready2 {
			rockchip,pins = <7 13 RK_FUNC_GPIO &pcfg_output_low>;
		};

		led_syncing: led_syncing {
			rockchip,pins = <7 11 RK_FUNC_GPIO &pcfg_output_low>;
		};

		led_error: led_error {
			rockchip,pins = <7 15 RK_FUNC_GPIO &pcfg_output_low>;
		};
	};

	modem {
		modem_on_off: modem-on-off-gpio {
			rockchip,pins = <4 26 RK_FUNC_GPIO &pcfg_output_low>;
		};

		modem_shutdown: modem-shutdown {
			rockchip,pins = <5 17 RK_FUNC_GPIO &pcfg_output_high>;
		};
	};

	usb-host {
		usb2_pwr_en: usb2-pwr-en {
			rockchip,pins = <0 12 RK_FUNC_GPIO &pcfg_pull_up>;
		};
	};
};

&sdio0 {
	clock-freq-min-max = <400000 100000000>;
};

&usb_otg {
	/*
	 * This is not actually connected, but there might be
	 * things relying on the usb clocks. So we'll keep it on
	 * instead of disabling.
	 */
};
